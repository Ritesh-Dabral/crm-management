{
  "openapi": "3.0.0",
  "info": {
    "title": "imagecrew-node documentation",
    "description": "This is a generated swagger json documentation for your sails project 'imagecrew-node'.",
    "contact": {
      "name": "",
      "url": "",
      "email": ""
    },
    "termsOfService": "",
    "license": {
      "name": "",
      "url": ""
    },
    "version": ""
  },
  "servers": [
    {
      "url": "http://localhost:1337/"
    }
  ],
  "externalDocs": {
    "url": "https://theoomoregbee.github.io/"
  },
  "tags": [
    {
      "name": "enterprise_details",
      "description": "Sails blueprint actions for the **enterprise_details** model"
    },
    {
      "name": "enterprise_user_details",
      "description": "Sails blueprint actions for the **enterprise_user_details** model"
    },
    {
      "name": "team_user_details",
      "description": "Sails blueprint actions for the **team_user_details** model"
    },
    {
      "name": "user_details",
      "description": "Sails blueprint actions for the **user_details** model"
    },
    {
      "name": "user_invite",
      "description": "Sails blueprint actions for the **user_invite** model"
    },
    {
      "name": "Make spyne admin or owner"
    },
    {
      "name": "Signup"
    },
    {
      "name": "Login"
    },
    {
      "name": "Logout"
    },
    {
      "name": "Validate permissions"
    },
    {
      "name": "Validate user"
    },
    {
      "name": "Enterprise team auth"
    },
    {
      "name": "Refresh token"
    },
    {
      "name": "generate otp"
    },
    {
      "name": "verify otp"
    },
    {
      "name": "Update user details"
    },
    {
      "name": "Deactivate User"
    },
    {
      "name": "Add users in enterprises"
    },
    {
      "name": "verify if user already exists"
    },
    {
      "name": "user-exists-whitelabel"
    },
    {
      "name": "Check user by email"
    },
    {
      "name": "Add"
    },
    {
      "name": "Get"
    },
    {
      "name": "Update"
    },
    {
      "name": "Get current role details"
    },
    {
      "name": "Empty cache"
    },
    {
      "name": "Cache invalidate"
    },
    {
      "name": "Login sdk for new system"
    },
    {
      "name": "Generate token"
    },
    {
      "name": "Verify token"
    },
    {
      "name": "Delete redis key"
    },
    {
      "name": "Migrate user"
    },
    {
      "name": "Get data"
    }
  ],
  "components": {
    "schemas": {
      "enterprise_details": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/enterprise_details-without-required-constraint"
          },
          {
            "required": [
              "enterprise_id"
            ]
          }
        ]
      },
      "enterprise_details-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **enterprise_details**",
        "properties": {
          "enterprise_id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string"
          },
          "email_id": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "enterprise_tat": {
            "type": "number",
            "format": "double"
          },
          "is_active": {
            "type": "string"
          },
          "api_key": {
            "type": "string"
          },
          "legal_name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          },
          "fav_icon_url": {
            "type": "string"
          },
          "spyne_assured": {
            "type": "string",
            "default": "NONE",
            "example": "NONE"
          },
          "quality_check": {
            "type": "number",
            "format": "double"
          },
          "enterprise_qc": {
            "type": "number",
            "format": "double"
          },
          "enterprise_qc_priority": {
            "type": "number",
            "format": "double"
          },
          "country": {
            "type": "string"
          },
          "enterprise_domain": {
            "type": "string"
          },
          "category_id": {
            "type": "string"
          },
          "onboarding_flow": {
            "type": "boolean",
            "default": false
          },
          "website_links": {
            "type": "string",
            "default": "[]",
            "example": "[]"
          },
          "admin_email": {
            "type": "string",
            "default": ""
          },
          "cs_email": {
            "type": "string",
            "default": ""
          },
          "annual_revenue": {
            "type": "string"
          },
          "stage": {
            "type": "string",
            "default": "Signup",
            "example": "Signup"
          },
          "type": {
            "type": "string",
            "default": "Sales",
            "example": "Sales"
          },
          "support_email": {
            "type": "string",
            "default": ""
          }
        }
      },
      "enterprise_user_details": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/enterprise_user_details-without-required-constraint"
          },
          {
            "required": [
              "user_id",
              "enterprise_id",
              "is_default",
              "secret_key"
            ]
          }
        ]
      },
      "enterprise_user_details-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **enterprise_user_details**",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "user_id": {
            "type": "string"
          },
          "enterprise_id": {
            "type": "string"
          },
          "is_default": {
            "type": "number",
            "format": "double"
          },
          "secret_key": {
            "type": "string"
          }
        }
      },
      "team_user_details": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/team_user_details-without-required-constraint"
          },
          {
            "required": [
              "user_id",
              "team_id"
            ]
          }
        ]
      },
      "team_user_details-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **team_user_details**",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "user_id": {
            "type": "string"
          },
          "team_id": {
            "type": "string"
          }
        }
      },
      "user_details": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/user_details-without-required-constraint"
          },
          {
            "required": [
              "user_id",
              "user_name",
              "signup_strategy"
            ]
          }
        ]
      },
      "user_details-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **user_details**",
        "properties": {
          "user_id": {
            "type": "string",
            "uniqueItems": true
          },
          "user_name": {
            "type": "string"
          },
          "email_id": {
            "type": "string",
            "default": ""
          },
          "contact_no": {
            "type": "string",
            "default": ""
          },
          "isd_code": {
            "type": "string",
            "default": ""
          },
          "password": {
            "type": "string",
            "default": ""
          },
          "signup_strategy": {
            "type": "string"
          },
          "is_verified": {
            "type": "number",
            "format": "double",
            "default": 0
          },
          "password_hash_algo": {
            "type": "string",
            "default": "md5",
            "example": "md5"
          },
          "internal_organisation_role": {
            "type": "string"
          },
          "signup_source": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "signup_toolname": {
            "type": "string"
          },
          "base_tool_name": {
            "type": "string"
          },
          "meta_data": {}
        }
      },
      "user_invite": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/user_invite-without-required-constraint"
          },
          {
            "required": [
              "invite_id",
              "enterprise_id",
              "team_id",
              "entity",
              "entity_type",
              "strategy",
              "actor_id",
              "token",
              "status"
            ]
          }
        ]
      },
      "user_invite-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **user_invite**",
        "properties": {
          "is_link_used": {
            "type": "number",
            "format": "double",
            "default": 0
          },
          "invite_id": {
            "type": "string",
            "uniqueItems": true
          },
          "enterprise_id": {
            "type": "string"
          },
          "team_id": {
            "type": "string"
          },
          "entity": {
            "type": "string"
          },
          "entity_type": {
            "type": "string"
          },
          "strategy": {
            "type": "string"
          },
          "actor_id": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      }
    },
    "parameters": {
      "ModelPKParam-enterprise_details": {
        "in": "path",
        "name": "_enterprise_id",
        "required": true,
        "schema": {
          "type": "string",
          "uniqueItems": true
        },
        "description": "The desired **enterprise_details** record's primary key value"
      },
      "ModelPKParam-enterprise_user_details": {
        "in": "path",
        "name": "_id",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": true,
          "description": "Note Sails special attributes: autoIncrement"
        },
        "description": "The desired **enterprise_user_details** record's primary key value"
      },
      "ModelPKParam-team_user_details": {
        "in": "path",
        "name": "_id",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": true,
          "description": "Note Sails special attributes: autoIncrement"
        },
        "description": "The desired **team_user_details** record's primary key value"
      },
      "ModelPKParam-user_details": {
        "in": "path",
        "name": "_user_id",
        "required": true,
        "schema": {
          "type": "string",
          "uniqueItems": true
        },
        "description": "The desired **user_details** record's primary key value"
      },
      "ModelPKParam-user_invite": {
        "in": "path",
        "name": "_invite_id",
        "required": true,
        "schema": {
          "type": "string",
          "uniqueItems": true
        },
        "description": "The desired **user_invite** record's primary key value"
      },
      "AttributeFilterParam": {
        "in": "query",
        "name": "_*_",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "To filter results based on a particular attribute, specify a query parameter with the same name as the attribute defined on your model. For instance, if our `Purchase` model has an `amount` attribute, we could send `GET /purchase?amount=99.99` to return a list of $99.99 purchases."
      },
      "WhereQueryParam": {
        "in": "query",
        "name": "where",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Instead of filtering based on a specific attribute, you may instead choose to provide a `where` parameter with the WHERE piece of a [Waterline criteria](https://sailsjs.com/documentation/concepts/models-and-orm/query-language), _encoded as a JSON string_. This allows you to take advantage of `contains`, `startsWith`, and other sub-attribute criteria modifiers for more powerful `find()` queries.\n\ne.g. `?where={\"name\":{\"contains\":\"theodore\"}}`"
      },
      "LimitQueryParam": {
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The maximum number of records to send back (useful for pagination). Defaults to 30."
      },
      "SkipQueryParam": {
        "in": "query",
        "name": "skip",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The number of records to skip (useful for pagination)."
      },
      "SortQueryParam": {
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "The sort order. By default, returned records are sorted by primary key value in ascending order.\n\ne.g. `?sort=lastName%20ASC`"
      }
    }
  },
  "paths": {
    "/user-management/make-spyne-admin-or-owner": {
      "post": {
        "summary": "Make spyne admin or owner",
        "description": "Make spyne admin or owner",
        "tags": [
          "Make spyne admin or owner"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "emailId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "password",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "role",
            "required": false,
            "schema": {
              "type": "string",
              "default": "SPYNE_ADMIN",
              "example": "SPYNE_ADMIN"
            }
          },
          {
            "in": "query",
            "name": "userName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ownerEmailId",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/user/signup": {
      "post": {
        "summary": "Signup",
        "description": "Signup user.",
        "tags": [
          "Signup"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "strategy",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "GOOGLE",
                "PASSWORD",
                "OTP"
              ]
            }
          },
          {
            "in": "query",
            "name": "contactNo",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "emailId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "password",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "isdCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "userName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "deviceId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "enterpriseOnboarding",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "roleOrganisation",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "source",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "teamId",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "this is added to signup users in the team selected"
          },
          {
            "in": "query",
            "name": "sendWelcomeEmail",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "this is added to send welcome emails but signup with default permissions"
          },
          {
            "in": "query",
            "name": "toolName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "baseToolName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "userMeta",
            "required": false,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/user/login": {
      "post": {
        "summary": "Login",
        "description": "Login user.",
        "tags": [
          "Login"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "strategy",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "GOOGLE",
                "PASSWORD",
                "OTP"
              ]
            }
          },
          {
            "in": "query",
            "name": "contactNo",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "emailId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "password",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "isdCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "deviceId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "platform",
            "required": false,
            "schema": {
              "type": "string",
              "default": "SELFSERVE",
              "enum": [
                "WHITELABEL",
                "SELFSERVE"
              ],
              "example": "SELFSERVE"
            }
          },
          {
            "in": "query",
            "name": "apiKey",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/user/logout": {
      "post": {
        "summary": "Logout",
        "description": "Logout user based on multiple devices.",
        "tags": [
          "Logout"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "deviceIdList",
            "required": true,
            "schema": {}
          },
          {
            "in": "query",
            "name": "isLogOutFromAllDevices",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/user/validate-permissions": {
      "post": {
        "summary": "Validate permissions",
        "description": "Validate permission against user role",
        "tags": [
          "Validate permissions"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "enterpriseIdList",
            "required": false,
            "schema": {
              "type": "array",
              "items": {},
              "default": [],
              "example": []
            }
          },
          {
            "in": "query",
            "name": "teamIdList",
            "required": false,
            "schema": {
              "type": "array",
              "items": {},
              "default": [],
              "example": []
            }
          },
          {
            "in": "query",
            "name": "permissionsList",
            "required": true,
            "schema": {}
          },
          {
            "in": "query",
            "name": "isStrictTypeChecking",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/user/validate-user": {
      "get": {
        "summary": "Validate user",
        "description": "This API already passes thru middleware isAuth, if we reach here, means user is authentic",
        "tags": [
          "Validate user"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/user/validate-users-team-enterprise": {
      "post": {
        "summary": "Enterprise team auth",
        "description": "authinticates weather a user exists in team and enterprise",
        "tags": [
          "Enterprise team auth"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "team_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "enterprise_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/user/refresh-token": {
      "post": {
        "summary": "Refresh token",
        "description": "Refresh the token when required. Changes the authkey for the user and device id",
        "tags": [
          "Refresh token"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/user/generate-otp": {
      "post": {
        "summary": "generate otp",
        "description": "generate otp for sign up or for login",
        "tags": [
          "generate otp"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "email_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "enterprise_id",
            "required": false,
            "schema": {
              "type": "string",
              "default": "TaD1VC1Ko",
              "example": "TaD1VC1Ko"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/user/verify-otp": {
      "post": {
        "summary": "verify otp",
        "description": "verify otp for sign up  ",
        "tags": [
          "verify otp"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "email_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "otp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/user/update-user-details": {
      "patch": {
        "summary": "Update user details",
        "description": "will update user details like name, contact, password",
        "tags": [
          "Update user details"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_data",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "user_name": {
                  "example": "",
                  "type": "string"
                },
                "contact_no": {
                  "example": "",
                  "type": "string"
                },
                "email_id": {
                  "example": "",
                  "type": "string"
                },
                "password": {
                  "example": {
                    "current_password": "",
                    "new_password": ""
                  },
                  "type": "object",
                  "properties": {
                    "current_password": {
                      "example": "",
                      "type": "string"
                    },
                    "new_password": {
                      "example": "",
                      "type": "string"
                    }
                  }
                }
              },
              "example": {
                "user_name": "",
                "contact_no": "",
                "email_id": "",
                "password": {
                  "current_password": "",
                  "new_password": ""
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/user/delete-user": {
      "patch": {
        "summary": "Deactivate User",
        "description": "will deactivate the user id",
        "tags": [
          "Deactivate User"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_data",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "email_id": {
                  "example": "",
                  "type": "string"
                },
                "password": {
                  "example": {
                    "current_password": ""
                  },
                  "type": "object",
                  "properties": {
                    "current_password": {
                      "example": "",
                      "type": "string"
                    }
                  }
                }
              },
              "example": {
                "email_id": "",
                "password": {
                  "current_password": ""
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/user/add-users-in-enterprises": {
      "post": {
        "summary": "Add users in enterprises",
        "description": "this API will add the email id into the list of enterprises and their default teams with all 3 level roles provided as input",
        "tags": [
          "Add users in enterprises"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "email_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "enterprise_ids",
            "required": true,
            "schema": {}
          },
          {
            "in": "query",
            "name": "user_level_role",
            "required": false,
            "schema": {
              "type": "string",
              "default": "SPYNE_STANDARD",
              "enum": [
                "SPYNE_OWNER",
                "SPYNE_ADMIN",
                "SPYNE_CREATIVE",
                "SPYNE_CS",
                "SPYNE_STANDARD"
              ],
              "example": "SPYNE_STANDARD"
            }
          },
          {
            "in": "query",
            "name": "team_level_role",
            "required": false,
            "schema": {
              "type": "string",
              "default": "TEAM_STANDARD",
              "enum": [
                "TEAM_ADMIN",
                "TEAM_STANDARD"
              ],
              "example": "TEAM_STANDARD"
            }
          },
          {
            "in": "query",
            "name": "enterprise_level_role",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ENTERPRISE_OWNER",
                "ENTERPRISE_STANDARD"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Resource not found"
          },
          "424": {
            "description": "Success"
          },
          "500": {
            "description": "Success"
          }
        }
      }
    },
    "/user-management/v1/user/user-exists": {
      "get": {
        "summary": "verify if user already exists",
        "description": "verify if user already exists",
        "tags": [
          "verify if user already exists"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "email_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "googleStrategy",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "device_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "app_category",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "cat_d8R14zUNE",
                "cat_Ujt0kuFxY",
                "cat_Ujt0kuFxF"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/user/user-exists-whitelabel": {
      "get": {
        "summary": "/user-management/v1/user/user-exists-whitelabel",
        "tags": [
          "user-exists-whitelabel"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "email_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "googleStrategy",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "device_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "api_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "platform",
            "required": false,
            "schema": {
              "type": "string",
              "default": "SELFSERVE",
              "enum": [
                "WHITELABEL",
                "SELFSERVE"
              ],
              "example": "SELFSERVE"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/user/logout-password-changed": {
      "post": {
        "summary": "Logout",
        "description": "Logout user from multiple devices when password changed.",
        "tags": [
          "Logout"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/user/check-user-by-email": {
      "post": {
        "summary": "Check user by email",
        "description": "checks if any user exist by this email and return its enterprise id and if not onboard user and return its enterprise id",
        "tags": [
          "Check user by email"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/permission/add": {
      "post": {
        "summary": "Add",
        "description": "Add permission.",
        "tags": [
          "Add"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "VIEW",
                "MODIFY",
                "RENAME",
                "DELETE",
                "CREATE",
                "USE"
              ]
            }
          },
          {
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "PROJECT",
                "CREDIT",
                "DOWNLOAD",
                "USER",
                "ENTERPRISE",
                "APP",
                "PUBLICAPI"
              ]
            }
          },
          {
            "in": "query",
            "name": "subDomain",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "SKU",
                "IMAGE",
                "FOLDER",
                "TEAM",
                "STUDIO"
              ]
            }
          },
          {
            "in": "query",
            "name": "additional",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PERMISSION",
                "ROLE",
                "CONFIG",
                "TRANSACTION",
                "PLAN",
                "SECRETKEY",
                "FEATURE",
                "PASSWORD"
              ]
            },
            "description": "anything which does not come under the above all"
          },
          {
            "in": "query",
            "name": "target",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "SELF",
                "MULTIPLE"
              ]
            }
          },
          {
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "READ",
                "WRITE",
                "DELETE",
                "EDIT"
              ]
            }
          },
          {
            "in": "query",
            "name": "description",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "501": {
            "description": "Success"
          }
        }
      }
    },
    "/user-management/v1/permission/get": {
      "get": {
        "summary": "Get",
        "description": "Get permission.",
        "tags": [
          "Get"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/permission/update": {
      "post": {
        "summary": "Update",
        "description": "Update permission.",
        "tags": [
          "Update"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "operationCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "active",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "501": {
            "description": "Success"
          }
        }
      }
    },
    "/user-management/v1/role-permission/add": {
      "post": {
        "summary": "Add",
        "description": "Add role permission.",
        "tags": [
          "Add"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "roleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "operationCodeList",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/role-permission/get-modifiable-roles": {
      "get": {
        "summary": "Get",
        "description": "Returns a list of permission which can be used to modify role of other users",
        "tags": [
          "Get"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "enterpriseId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "teamId",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not found"
          },
          "408": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/role-permission/update": {
      "post": {
        "summary": "Update",
        "description": "Update role permission.",
        "tags": [
          "Update"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "roleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "data",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/role-permission/get-current-role-details": {
      "post": {
        "summary": "Get current role details",
        "description": "Get role detail on any level for a list of users",
        "tags": [
          "Get current role details"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userIdList",
            "required": true,
            "schema": {}
          },
          {
            "in": "query",
            "name": "enterpriseId",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "teamId",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not found"
          },
          "408": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/user-permission/update": {
      "post": {
        "summary": "Update",
        "description": "Update user permission.",
        "tags": [
          "Update"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "roleUpdate",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/user-permission/get": {
      "get": {
        "summary": "Get",
        "description": "Get user permission.",
        "tags": [
          "Get"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userIdList",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/user-permission/update-permission": {
      "post": {
        "summary": "Update",
        "description": "Update user permission.",
        "tags": [
          "Update"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "enterpriseId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "role_in_team",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "enterpriseRole",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/cache/empty-cache": {
      "post": {
        "summary": "Empty cache",
        "description": "Will clean the cache",
        "tags": [
          "Empty cache"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cacheName",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "userAuth",
                "userPermission"
              ]
            }
          },
          {
            "in": "query",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/cache/cache-invalidate": {
      "post": {
        "summary": "Cache invalidate",
        "tags": [
          "Cache invalidate"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/auth/login": {
      "post": {
        "summary": "Login",
        "description": "Login auth.",
        "tags": [
          "Login"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "strategy",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "apiKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "emailId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "password",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "deviceId",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "referralCode",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "categoryId",
            "required": false,
            "schema": {
              "type": "string",
              "default": "cat_d8R14zUNE",
              "example": "cat_d8R14zUNE"
            }
          },
          {
            "in": "query",
            "name": "resourceType",
            "required": false,
            "schema": {
              "type": "string",
              "default": "contactNumber",
              "example": "contactNumber"
            }
          },
          {
            "in": "query",
            "name": "contactNumber",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "OTP",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "platform",
            "required": false,
            "schema": {
              "type": "string",
              "default": "SELFSERVE",
              "enum": [
                "WHITELABEL",
                "SELFSERVE"
              ],
              "example": "SELFSERVE"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/auth2/login": {
      "post": {
        "summary": "Login",
        "description": "Login auth.",
        "tags": [
          "Login"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "strategy",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "password",
                "verifyEmail",
                "enterpriseCode",
                "OTP",
                "deepLink",
                "ecommerceSignUp",
                "generateOTP",
                "validateOTP",
                "GOOGLE"
              ]
            }
          },
          {
            "in": "query",
            "name": "apiKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "emailId",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "password",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "referralCode",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "categoryId",
            "required": false,
            "schema": {
              "type": "string",
              "default": "cat_d8R14zUNE",
              "enum": [
                "cat_d8R14zUNE",
                "cat_Ujt0kuFxY",
                "cat_Ujt0kuFxF"
              ],
              "example": "cat_d8R14zUNE"
            }
          },
          {
            "in": "query",
            "name": "resourceType",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "contactNumber",
                "emailId"
              ]
            }
          },
          {
            "in": "query",
            "name": "contactNumber",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "OTP",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "platform",
            "required": false,
            "schema": {
              "type": "string",
              "default": "SELFSERVE",
              "enum": [
                "WHITELABEL",
                "SELFSERVE"
              ],
              "example": "SELFSERVE"
            }
          },
          {
            "in": "query",
            "name": "appType",
            "required": false,
            "schema": {
              "type": "string",
              "default": "AUTO",
              "enum": [
                "FOOD",
                "ECOM",
                "AUTO"
              ],
              "example": "AUTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/auth/sdk-login": {
      "post": {
        "summary": "Login sdk for new system",
        "description": "Login sdk for new system",
        "tags": [
          "Login sdk for new system"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "apiKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "emailId",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "resourceType",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "emailId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/authV2/login": {
      "post": {
        "summary": "Login",
        "description": "Login auth.",
        "tags": [
          "Login"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "strategy",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "password",
                "verifyEmail",
                "enterpriseCode",
                "OTP",
                "deepLink",
                "ecommerceSignUp",
                "generateOTP",
                "validateOTP",
                "GOOGLE"
              ]
            }
          },
          {
            "in": "query",
            "name": "apiKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "emailId",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "password",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "referralCode",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "categoryId",
            "required": false,
            "schema": {
              "type": "string",
              "default": "cat_d8R14zUNE",
              "enum": [
                "cat_d8R14zUNE",
                "cat_Ujt0kuFxY",
                "cat_Ujt0kuFxF"
              ],
              "example": "cat_d8R14zUNE"
            }
          },
          {
            "in": "query",
            "name": "resourceType",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "contactNumber",
                "emailId"
              ]
            }
          },
          {
            "in": "query",
            "name": "contactNumber",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "OTP",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "platform",
            "required": false,
            "schema": {
              "type": "string",
              "default": "SELFSERVE",
              "enum": [
                "WHITELABEL",
                "SELFSERVE"
              ],
              "example": "SELFSERVE"
            }
          },
          {
            "in": "query",
            "name": "appType",
            "required": false,
            "schema": {
              "type": "string",
              "default": "AUTO",
              "enum": [
                "FOOD",
                "ECOM",
                "AUTO"
              ],
              "example": "AUTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/auth/food-sdk-login": {
      "post": {
        "summary": "Login sdk for new system",
        "description": "Login sdk for new system",
        "tags": [
          "Login sdk for new system"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "apiKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "externalUserId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "entityId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "source",
            "required": false,
            "schema": {
              "type": "string",
              "default": "food-sdk",
              "example": "food-sdk"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/token/generate": {
      "post": {
        "summary": "Generate token",
        "description": "Generate the token to be provided for public apis and create a secret key for the user.",
        "tags": [
          "Generate token"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "enterpriseId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Success"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/token/verify": {
      "get": {
        "summary": "Verify token",
        "description": "Verify the token.",
        "tags": [
          "Verify token"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/token/refresh": {
      "get": {
        "summary": "Refresh token",
        "description": "Refresh the token.",
        "tags": [
          "Refresh token"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/utils/delete-redis-key": {
      "delete": {
        "summary": "Delete redis key",
        "description": "To delete a key from Redis",
        "tags": [
          "Delete redis key"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Key to be deleted from redis"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/api/v1/user/migrate-user": {
      "post": {
        "summary": "Migrate user",
        "description": "Migrating the users script for older enterprises.",
        "tags": [
          "Migrate user"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "enterprise_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "owner_email_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "role_name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/util/mongo/get-data": {
      "get": {
        "summary": "Get data",
        "description": "based on collectionName, findQuery, fetch data from mongo",
        "tags": [
          "Get data"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "collectionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "findQuery",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/util/mongo/update-data": {
      "post": {
        "summary": "Get data",
        "description": "based on collectionName, findQuery, updateQuery and optionQuery, update data on mongo",
        "tags": [
          "Get data"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "collectionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "findQuery",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "updateQuery",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "optionQuery",
            "required": false,
            "schema": {
              "type": "string",
              "default": "{}",
              "example": "{}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/util/mongo/delete-data": {
      "post": {
        "summary": "Get data",
        "description": "based on collectionName, findQuery, fetch data from mongo",
        "tags": [
          "Get data"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "collectionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "findQuery",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "many",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user-management/v1/util/mongo/insert-data": {
      "post": {
        "summary": "Get data",
        "description": "based on collectionName, findQuery, fetch data from mongo",
        "tags": [
          "Get data"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "collectionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "document",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "many",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/enterprise_details/find": {
      "get": {
        "summary": "List enterprise_details (find where) *",
        "description": "Find a list of **enterprise_details** records that match the specified criteria.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "enterprise_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "enterprise_id,name,email_id,category,enterprise_tat,is_active,api_key,legal_name,address,logo_url,fav_icon_url,spyne_assured,quality_check,enterprise_qc,enterprise_qc_priority,country,enterprise_domain,category_id,onboarding_flow,website_links,admin_email,cs_email,annual_revenue,stage,type,support_email"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "enterprise_id,name,email_id,category,enterprise_tat,is_active,api_key,legal_name,address,logo_url,fav_icon_url,spyne_assured,quality_check,enterprise_qc,enterprise_qc_priority,country,enterprise_domain,category_id,onboarding_flow,website_links,admin_email,cs_email,annual_revenue,stage,type,support_email"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **enterprise_details** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/enterprise_details"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/enterprise_details/find/{_enterprise_id}": {
      "get": {
        "summary": "Get enterprise_details (find one) *",
        "description": "Look up the **enterprise_details** record with the specified ID.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "enterprise_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-enterprise_details"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "enterprise_id,name,email_id,category,enterprise_tat,is_active,api_key,legal_name,address,logo_url,fav_icon_url,spyne_assured,quality_check,enterprise_qc,enterprise_qc_priority,country,enterprise_domain,category_id,onboarding_flow,website_links,admin_email,cs_email,annual_revenue,stage,type,support_email"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "enterprise_id,name,email_id,category,enterprise_tat,is_active,api_key,legal_name,address,logo_url,fav_icon_url,spyne_assured,quality_check,enterprise_qc,enterprise_qc_priority,country,enterprise_domain,category_id,onboarding_flow,website_links,admin_email,cs_email,annual_revenue,stage,type,support_email"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **enterprise_details** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise_details"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **enterprise_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/enterprise_details/create": {
      "get": {
        "summary": "Create enterprise_details *",
        "description": "Create a new **enterprise_details** record.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "enterprise_details"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "enterprise_id",
            "schema": {
              "type": "string",
              "uniqueItems": true
            },
            "required": true
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "email_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "enterprise_tat",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "is_active",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "api_key",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "legal_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "address",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "logo_url",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fav_icon_url",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "spyne_assured",
            "schema": {
              "type": "string",
              "default": "NONE",
              "example": "NONE"
            }
          },
          {
            "in": "query",
            "name": "quality_check",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "enterprise_qc",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "enterprise_qc_priority",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "country",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "enterprise_domain",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "category_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "onboarding_flow",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "website_links",
            "schema": {
              "type": "string",
              "default": "[]",
              "example": "[]"
            }
          },
          {
            "in": "query",
            "name": "admin_email",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "cs_email",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "annual_revenue",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "stage",
            "schema": {
              "type": "string",
              "default": "Signup",
              "example": "Signup"
            }
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "default": "Sales",
              "example": "Sales"
            }
          },
          {
            "in": "query",
            "name": "support_email",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **enterprise_details** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise_details"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/enterprise_details/update/{_enterprise_id}": {
      "get": {
        "summary": "Update enterprise_details *",
        "description": "Update an existing **enterprise_details** record.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "enterprise_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-enterprise_details"
          },
          {
            "in": "query",
            "name": "enterprise_id",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "email_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "enterprise_tat",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "is_active",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "api_key",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "legal_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "address",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "logo_url",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fav_icon_url",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "spyne_assured",
            "schema": {
              "type": "string",
              "default": "NONE",
              "example": "NONE"
            }
          },
          {
            "in": "query",
            "name": "quality_check",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "enterprise_qc",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "enterprise_qc_priority",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "country",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "enterprise_domain",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "category_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "onboarding_flow",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "website_links",
            "schema": {
              "type": "string",
              "default": "[]",
              "example": "[]"
            }
          },
          {
            "in": "query",
            "name": "admin_email",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "cs_email",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "annual_revenue",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "stage",
            "schema": {
              "type": "string",
              "default": "Signup",
              "example": "Signup"
            }
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "default": "Sales",
              "example": "Sales"
            }
          },
          {
            "in": "query",
            "name": "support_email",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **enterprise_details** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise_details"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **enterprise_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/enterprise_details/destroy/{_enterprise_id}": {
      "get": {
        "summary": "Delete enterprise_details (destroy) *",
        "description": "Delete the **enterprise_details** record with the specified ID.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "enterprise_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-enterprise_details"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **enterprise_details** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise_details"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **enterprise_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/enterprise_user_details/find": {
      "get": {
        "summary": "List enterprise_user_details (find where) *",
        "description": "Find a list of **enterprise_user_details** records that match the specified criteria.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "enterprise_user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,user_id,enterprise_id,is_default,secret_key"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,user_id,enterprise_id,is_default,secret_key"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **enterprise_user_details** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/enterprise_user_details"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/enterprise_user_details/find/{_id}": {
      "get": {
        "summary": "Get enterprise_user_details (find one) *",
        "description": "Look up the **enterprise_user_details** record with the specified ID.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "enterprise_user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-enterprise_user_details"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,user_id,enterprise_id,is_default,secret_key"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,user_id,enterprise_id,is_default,secret_key"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **enterprise_user_details** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise_user_details"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **enterprise_user_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/enterprise_user_details/create": {
      "get": {
        "summary": "Create enterprise_user_details *",
        "description": "Create a new **enterprise_user_details** record.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "enterprise_user_details"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "integer",
              "format": "int64",
              "uniqueItems": true,
              "description": "Note Sails special attributes: autoIncrement"
            },
            "description": "Note Sails special attributes: autoIncrement"
          },
          {
            "in": "query",
            "name": "user_id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "enterprise_id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "is_default",
            "schema": {
              "type": "number",
              "format": "double"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "secret_key",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **enterprise_user_details** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise_user_details"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/enterprise_user_details/update/{_id}": {
      "get": {
        "summary": "Update enterprise_user_details *",
        "description": "Update an existing **enterprise_user_details** record.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "enterprise_user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-enterprise_user_details"
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "integer",
              "format": "int64",
              "uniqueItems": true,
              "description": "Note Sails special attributes: autoIncrement"
            },
            "description": "Note Sails special attributes: autoIncrement"
          },
          {
            "in": "query",
            "name": "user_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "enterprise_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "is_default",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "secret_key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **enterprise_user_details** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise_user_details"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **enterprise_user_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/enterprise_user_details/destroy/{_id}": {
      "get": {
        "summary": "Delete enterprise_user_details (destroy) *",
        "description": "Delete the **enterprise_user_details** record with the specified ID.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "enterprise_user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-enterprise_user_details"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **enterprise_user_details** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise_user_details"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **enterprise_user_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/team_user_details/find": {
      "get": {
        "summary": "List team_user_details (find where) *",
        "description": "Find a list of **team_user_details** records that match the specified criteria.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "team_user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,user_id,team_id"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,user_id,team_id"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **team_user_details** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/team_user_details"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/team_user_details/find/{_id}": {
      "get": {
        "summary": "Get team_user_details (find one) *",
        "description": "Look up the **team_user_details** record with the specified ID.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "team_user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-team_user_details"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,user_id,team_id"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,user_id,team_id"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **team_user_details** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/team_user_details"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **team_user_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/team_user_details/create": {
      "get": {
        "summary": "Create team_user_details *",
        "description": "Create a new **team_user_details** record.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "team_user_details"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "integer",
              "format": "int64",
              "uniqueItems": true,
              "description": "Note Sails special attributes: autoIncrement"
            },
            "description": "Note Sails special attributes: autoIncrement"
          },
          {
            "in": "query",
            "name": "user_id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "team_id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **team_user_details** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/team_user_details"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/team_user_details/update/{_id}": {
      "get": {
        "summary": "Update team_user_details *",
        "description": "Update an existing **team_user_details** record.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "team_user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-team_user_details"
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "integer",
              "format": "int64",
              "uniqueItems": true,
              "description": "Note Sails special attributes: autoIncrement"
            },
            "description": "Note Sails special attributes: autoIncrement"
          },
          {
            "in": "query",
            "name": "user_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "team_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **team_user_details** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/team_user_details"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **team_user_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/team_user_details/destroy/{_id}": {
      "get": {
        "summary": "Delete team_user_details (destroy) *",
        "description": "Delete the **team_user_details** record with the specified ID.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "team_user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-team_user_details"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **team_user_details** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/team_user_details"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **team_user_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user_details/find": {
      "get": {
        "summary": "List user_details (find where) *",
        "description": "Find a list of **user_details** records that match the specified criteria.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "user_id,user_name,email_id,contact_no,isd_code,password,signup_strategy,is_verified,password_hash_algo,internal_organisation_role,signup_source,category,signup_toolname,base_tool_name,meta_data"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "user_id,user_name,email_id,contact_no,isd_code,password,signup_strategy,is_verified,password_hash_algo,internal_organisation_role,signup_source,category,signup_toolname,base_tool_name,meta_data"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **user_details** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user_details"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user_details/find/{_user_id}": {
      "get": {
        "summary": "Get user_details (find one) *",
        "description": "Look up the **user_details** record with the specified ID.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-user_details"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "user_id,user_name,email_id,contact_no,isd_code,password,signup_strategy,is_verified,password_hash_algo,internal_organisation_role,signup_source,category,signup_toolname,base_tool_name,meta_data"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "user_id,user_name,email_id,contact_no,isd_code,password,signup_strategy,is_verified,password_hash_algo,internal_organisation_role,signup_source,category,signup_toolname,base_tool_name,meta_data"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **user_details** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_details"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **user_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user_details/create": {
      "get": {
        "summary": "Create user_details *",
        "description": "Create a new **user_details** record.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "user_details"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "schema": {
              "type": "string",
              "uniqueItems": true
            },
            "required": true
          },
          {
            "in": "query",
            "name": "user_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "email_id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "contact_no",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "isd_code",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "password",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "signup_strategy",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "is_verified",
            "schema": {
              "type": "number",
              "format": "double",
              "default": 0
            }
          },
          {
            "in": "query",
            "name": "password_hash_algo",
            "schema": {
              "type": "string",
              "default": "md5",
              "example": "md5"
            }
          },
          {
            "in": "query",
            "name": "internal_organisation_role",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "signup_source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "signup_toolname",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "base_tool_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "meta_data",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **user_details** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_details"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user_details/update/{_user_id}": {
      "get": {
        "summary": "Update user_details *",
        "description": "Update an existing **user_details** record.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-user_details"
          },
          {
            "in": "query",
            "name": "user_id",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "user_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "email_id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "contact_no",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "isd_code",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "password",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "signup_strategy",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "is_verified",
            "schema": {
              "type": "number",
              "format": "double",
              "default": 0
            }
          },
          {
            "in": "query",
            "name": "password_hash_algo",
            "schema": {
              "type": "string",
              "default": "md5",
              "example": "md5"
            }
          },
          {
            "in": "query",
            "name": "internal_organisation_role",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "signup_source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "signup_toolname",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "base_tool_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "meta_data",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **user_details** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_details"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **user_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user_details/destroy/{_user_id}": {
      "get": {
        "summary": "Delete user_details (destroy) *",
        "description": "Delete the **user_details** record with the specified ID.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-user_details"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **user_details** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_details"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **user_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user_invite/find": {
      "get": {
        "summary": "List user_invite (find where) *",
        "description": "Find a list of **user_invite** records that match the specified criteria.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "user_invite"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "is_link_used,invite_id,enterprise_id,team_id,entity,entity_type,strategy,actor_id,token,status"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "is_link_used,invite_id,enterprise_id,team_id,entity,entity_type,strategy,actor_id,token,status"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **user_invite** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user_invite"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user_invite/find/{_invite_id}": {
      "get": {
        "summary": "Get user_invite (find one) *",
        "description": "Look up the **user_invite** record with the specified ID.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "user_invite"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-user_invite"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "is_link_used,invite_id,enterprise_id,team_id,entity,entity_type,strategy,actor_id,token,status"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "is_link_used,invite_id,enterprise_id,team_id,entity,entity_type,strategy,actor_id,token,status"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **user_invite** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_invite"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **user_invite** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user_invite/create": {
      "get": {
        "summary": "Create user_invite *",
        "description": "Create a new **user_invite** record.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "user_invite"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "is_link_used",
            "schema": {
              "type": "number",
              "format": "double",
              "default": 0
            }
          },
          {
            "in": "query",
            "name": "invite_id",
            "schema": {
              "type": "string",
              "uniqueItems": true
            },
            "required": true
          },
          {
            "in": "query",
            "name": "enterprise_id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "team_id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "entity",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "entity_type",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "strategy",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "actor_id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **user_invite** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_invite"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user_invite/update/{_invite_id}": {
      "get": {
        "summary": "Update user_invite *",
        "description": "Update an existing **user_invite** record.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "user_invite"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-user_invite"
          },
          {
            "in": "query",
            "name": "is_link_used",
            "schema": {
              "type": "number",
              "format": "double",
              "default": 0
            }
          },
          {
            "in": "query",
            "name": "invite_id",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "enterprise_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "team_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "entity",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "entity_type",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "strategy",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "actor_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **user_invite** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_invite"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **user_invite** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user_invite/destroy/{_invite_id}": {
      "get": {
        "summary": "Delete user_invite (destroy) *",
        "description": "Delete the **user_invite** record with the specified ID.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "user_invite"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-user_invite"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **user_invite** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_invite"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **user_invite** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/enterprise_details": {
      "get": {
        "summary": "List enterprise_details (find where)",
        "description": "Find a list of **enterprise_details** records that match the specified criteria.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "enterprise_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "enterprise_id,name,email_id,category,enterprise_tat,is_active,api_key,legal_name,address,logo_url,fav_icon_url,spyne_assured,quality_check,enterprise_qc,enterprise_qc_priority,country,enterprise_domain,category_id,onboarding_flow,website_links,admin_email,cs_email,annual_revenue,stage,type,support_email"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "enterprise_id,name,email_id,category,enterprise_tat,is_active,api_key,legal_name,address,logo_url,fav_icon_url,spyne_assured,quality_check,enterprise_qc,enterprise_qc_priority,country,enterprise_domain,category_id,onboarding_flow,website_links,admin_email,cs_email,annual_revenue,stage,type,support_email"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **enterprise_details** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/enterprise_details"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create enterprise_details",
        "description": "Create a new **enterprise_details** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "enterprise_details"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **enterprise_details** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise_details"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the enterprise_details instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/enterprise_details"
              }
            }
          }
        }
      }
    },
    "/enterprise_details/{_enterprise_id}": {
      "get": {
        "summary": "Get enterprise_details (find one)",
        "description": "Look up the **enterprise_details** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "enterprise_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-enterprise_details"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "enterprise_id,name,email_id,category,enterprise_tat,is_active,api_key,legal_name,address,logo_url,fav_icon_url,spyne_assured,quality_check,enterprise_qc,enterprise_qc_priority,country,enterprise_domain,category_id,onboarding_flow,website_links,admin_email,cs_email,annual_revenue,stage,type,support_email"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "enterprise_id,name,email_id,category,enterprise_tat,is_active,api_key,legal_name,address,logo_url,fav_icon_url,spyne_assured,quality_check,enterprise_qc,enterprise_qc_priority,country,enterprise_domain,category_id,onboarding_flow,website_links,admin_email,cs_email,annual_revenue,stage,type,support_email"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **enterprise_details** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise_details"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **enterprise_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update enterprise_details",
        "description": "Update an existing **enterprise_details** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "enterprise_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-enterprise_details"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **enterprise_details** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise_details"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **enterprise_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the enterprise_details instance to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/enterprise_details-without-required-constraint"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete enterprise_details (destroy)",
        "description": "Delete the **enterprise_details** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "enterprise_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-enterprise_details"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **enterprise_details** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise_details"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **enterprise_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/enterprise_user_details": {
      "get": {
        "summary": "List enterprise_user_details (find where)",
        "description": "Find a list of **enterprise_user_details** records that match the specified criteria.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "enterprise_user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,user_id,enterprise_id,is_default,secret_key"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,user_id,enterprise_id,is_default,secret_key"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **enterprise_user_details** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/enterprise_user_details"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create enterprise_user_details",
        "description": "Create a new **enterprise_user_details** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "enterprise_user_details"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **enterprise_user_details** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise_user_details"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the enterprise_user_details instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/enterprise_user_details"
              }
            }
          }
        }
      }
    },
    "/enterprise_user_details/{_id}": {
      "get": {
        "summary": "Get enterprise_user_details (find one)",
        "description": "Look up the **enterprise_user_details** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "enterprise_user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-enterprise_user_details"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,user_id,enterprise_id,is_default,secret_key"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,user_id,enterprise_id,is_default,secret_key"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **enterprise_user_details** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise_user_details"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **enterprise_user_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update enterprise_user_details",
        "description": "Update an existing **enterprise_user_details** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "enterprise_user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-enterprise_user_details"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **enterprise_user_details** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise_user_details"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **enterprise_user_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the enterprise_user_details instance to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/enterprise_user_details-without-required-constraint"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete enterprise_user_details (destroy)",
        "description": "Delete the **enterprise_user_details** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "enterprise_user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-enterprise_user_details"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **enterprise_user_details** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise_user_details"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **enterprise_user_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/team_user_details": {
      "get": {
        "summary": "List team_user_details (find where)",
        "description": "Find a list of **team_user_details** records that match the specified criteria.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "team_user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,user_id,team_id"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,user_id,team_id"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **team_user_details** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/team_user_details"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create team_user_details",
        "description": "Create a new **team_user_details** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "team_user_details"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **team_user_details** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/team_user_details"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the team_user_details instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/team_user_details"
              }
            }
          }
        }
      }
    },
    "/team_user_details/{_id}": {
      "get": {
        "summary": "Get team_user_details (find one)",
        "description": "Look up the **team_user_details** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "team_user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-team_user_details"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,user_id,team_id"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,user_id,team_id"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **team_user_details** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/team_user_details"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **team_user_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update team_user_details",
        "description": "Update an existing **team_user_details** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "team_user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-team_user_details"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **team_user_details** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/team_user_details"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **team_user_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the team_user_details instance to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/team_user_details-without-required-constraint"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete team_user_details (destroy)",
        "description": "Delete the **team_user_details** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "team_user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-team_user_details"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **team_user_details** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/team_user_details"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **team_user_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user_details": {
      "get": {
        "summary": "List user_details (find where)",
        "description": "Find a list of **user_details** records that match the specified criteria.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "user_id,user_name,email_id,contact_no,isd_code,password,signup_strategy,is_verified,password_hash_algo,internal_organisation_role,signup_source,category,signup_toolname,base_tool_name,meta_data"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "user_id,user_name,email_id,contact_no,isd_code,password,signup_strategy,is_verified,password_hash_algo,internal_organisation_role,signup_source,category,signup_toolname,base_tool_name,meta_data"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **user_details** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user_details"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create user_details",
        "description": "Create a new **user_details** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "user_details"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **user_details** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_details"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the user_details instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_details"
              }
            }
          }
        }
      }
    },
    "/user_details/{_user_id}": {
      "get": {
        "summary": "Get user_details (find one)",
        "description": "Look up the **user_details** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-user_details"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "user_id,user_name,email_id,contact_no,isd_code,password,signup_strategy,is_verified,password_hash_algo,internal_organisation_role,signup_source,category,signup_toolname,base_tool_name,meta_data"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "user_id,user_name,email_id,contact_no,isd_code,password,signup_strategy,is_verified,password_hash_algo,internal_organisation_role,signup_source,category,signup_toolname,base_tool_name,meta_data"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **user_details** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_details"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **user_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update user_details",
        "description": "Update an existing **user_details** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-user_details"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **user_details** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_details"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **user_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the user_details instance to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_details-without-required-constraint"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user_details (destroy)",
        "description": "Delete the **user_details** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "user_details"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-user_details"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **user_details** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_details"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **user_details** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user_invite": {
      "get": {
        "summary": "List user_invite (find where)",
        "description": "Find a list of **user_invite** records that match the specified criteria.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "user_invite"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "is_link_used,invite_id,enterprise_id,team_id,entity,entity_type,strategy,actor_id,token,status"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "is_link_used,invite_id,enterprise_id,team_id,entity,entity_type,strategy,actor_id,token,status"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **user_invite** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user_invite"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create user_invite",
        "description": "Create a new **user_invite** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "user_invite"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **user_invite** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_invite"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the user_invite instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_invite"
              }
            }
          }
        }
      }
    },
    "/user_invite/{_invite_id}": {
      "get": {
        "summary": "Get user_invite (find one)",
        "description": "Look up the **user_invite** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "user_invite"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-user_invite"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "is_link_used,invite_id,enterprise_id,team_id,entity,entity_type,strategy,actor_id,token,status"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "is_link_used,invite_id,enterprise_id,team_id,entity,entity_type,strategy,actor_id,token,status"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **user_invite** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_invite"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **user_invite** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update user_invite",
        "description": "Update an existing **user_invite** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "user_invite"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-user_invite"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **user_invite** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_invite"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **user_invite** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the user_invite instance to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_invite-without-required-constraint"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user_invite (destroy)",
        "description": "Delete the **user_invite** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "user_invite"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-user_invite"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **user_invite** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_invite"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **user_invite** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}